{
    "cells": [
        {
            "language": "markdown",
            "source": [
                ""
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "## General tools\r\n\r\nThe package [node-unicode / node-unicode-data ](https://github.com/node-unicode/node-unicode-data) provides data about many properties of Unicode characters. The data itself is available for successive versions of Unicode, generated automatically from official Unicode data.\r\n\r\n**note** : node-unicode-data is to be used in the dev phase, to generate only the useful data for each application.\r\n\r\nThere is also [unicode-properties](https://www.npmjs.com/package/unicode-properties) which provides the most useful properties in a compact package.\r\n\r\n[unicode-name](https://www.npmjs.com/package/unicode-name) is a very big package with the full names of all Unicode characters."
            ],
            "outputs": []
        },
        {
            "language": "typescript",
            "source": [
                "import names from \"@unicode/unicode-16.0.0/Names\"\r\n\r\nshowCodePoints  =  (someCodepoints, count) => {\r\n    let display = []\r\n    for (let i = 0; i < Math.min(someCodepoints.length, count) ; i++) {\r\n        const c = someCodepoints[i]\r\n        display.push(`${new String(c).padStart(6)} - ${String.fromCodePoint(c)} - ${names.get(c)}`)\r\n\r\n    }\r\n    // const display = someCodepoints.map(x => x`)\r\n    // const display = someCodepoints.slice(0, count).map(x => `${String(x.padLeft(6))} ${String.fromCodePoint(x)} ${names.get(x)}`)\r\n    return display\r\n}"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "application/vnd.code.notebook.stdout",
                            "value": [
                                "",
                                ""
                            ]
                        }
                    ]
                },
                {
                    "items": [
                        {
                            "mime": "text/plain",
                            "value": [
                                "\u001b[36m[Function: showCodePoints]\u001b[39m"
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                "## Documentation\r\n\r\nhttps://en.wikipedia.org/wiki/Unicode_character_property\r\n\r\n"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "# The main unicode object"
            ],
            "outputs": []
        },
        {
            "language": "typescript",
            "source": [
                "import unicode from \"@unicode/unicode-16.0.0\"\r\n\r\n// console.log(unicode.name(\"a\"))\r\nconsole.log(Object.getOwnPropertyNames(unicode),\r\n    unicode)"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "application/vnd.code.notebook.stdout",
                            "value": [
                                "[",
                                "  'General_Category',",
                                "  'Binary_Property',",
                                "  'Bidi_Class',",
                                "  'Script',",
                                "  'Script_Extensions',",
                                "  'Case_Folding',",
                                "  'Block',",
                                "  'Bidi_Mirroring_Glyph',",
                                "  'Bidi_Paired_Bracket_Type',",
                                "  'Line_Break',",
                                "  'Word_Break',",
                                "  'Sequence_Property',",
                                "  'Names',",
                                "  'Simple_Case_Mapping',",
                                "  'Special_Casing'",
                                "] {",
                                "  General_Category: [",
                                "    'Cased_Letter',          'Close_Punctuation',",
                                "    'Connector_Punctuation', 'Control',",
                                "    'Currency_Symbol',       'Dash_Punctuation',",
                                "    'Decimal_Number',        'Enclosing_Mark',",
                                "    'Final_Punctuation',     'Format',",
                                "    'Initial_Punctuation',   'Letter',",
                                "    'Letter_Number',         'Line_Separator',",
                                "    'Lowercase_Letter',      'Mark',",
                                "    'Math_Symbol',           'Modifier_Letter',",
                                "    'Modifier_Symbol',       'Nonspacing_Mark',",
                                "    'Number',                'Open_Punctuation',",
                                "    'Other',                 'Other_Letter',",
                                "    'Other_Number',          'Other_Punctuation',",
                                "    'Other_Symbol',          'Paragraph_Separator',",
                                "    'Private_Use',           'Punctuation',",
                                "    'Separator',             'Space_Separator',",
                                "    'Spacing_Mark',          'Surrogate',",
                                "    'Symbol',                'Titlecase_Letter',",
                                "    'Unassigned',            'Uppercase_Letter'",
                                "  ],",
                                "  Binary_Property: [",
                                "    'ASCII',",
                                "    'ASCII_Hex_Digit',",
                                "    'Alphabetic',",
                                "    'Any',",
                                "    'Assigned',",
                                "    'Bidi_Control',",
                                "    'Bidi_Mirrored',",
                                "    'Case_Ignorable',",
                                "    'Cased',",
                                "    'Changes_When_Casefolded',",
                                "    'Changes_When_Casemapped',",
                                "    'Changes_When_Lowercased',",
                                "    'Changes_When_NFKC_Casefolded',",
                                "    'Changes_When_Titlecased',",
                                "    'Changes_When_Uppercased',",
                                "    'Composition_Exclusion',",
                                "    'Dash',",
                                "    'Default_Ignorable_Code_Point',",
                                "    'Deprecated',",
                                "    'Diacritic',",
                                "    'Emoji',",
                                "    'Emoji_Component',",
                                "    'Emoji_Modifier',",
                                "    'Emoji_Modifier_Base',",
                                "    'Emoji_Presentation',",
                                "    'Expands_On_NFC',",
                                "    'Expands_On_NFD',",
                                "    'Expands_On_NFKC',",
                                "    'Expands_On_NFKD',",
                                "    'Extended_Pictographic',",
                                "    'Extender',",
                                "    'Full_Composition_Exclusion',",
                                "    'Grapheme_Base',",
                                "    'Grapheme_Extend',",
                                "    'Grapheme_Link',",
                                "    'Hex_Digit',",
                                "    'Hyphen',",
                                "    'IDS_Binary_Operator',",
                                "    'IDS_Trinary_Operator',",
                                "    'IDS_Unary_Operator',",
                                "    'ID_Compat_Math_Continue',",
                                "    'ID_Compat_Math_Start',",
                                "    'ID_Continue',",
                                "    'ID_Start',",
                                "    'Ideographic',",
                                "    'InCB',",
                                "    'Join_Control',",
                                "    'Logical_Order_Exception',",
                                "    'Lowercase',",
                                "    'Math',",
                                "    'Modifier_Combining_Mark',",
                                "    'NFKC_Simple_Casefold',",
                                "    'Noncharacter_Code_Point',",
                                "    'Other_Alphabetic',",
                                "    'Other_Default_Ignorable_Code_Point',",
                                "    'Other_Grapheme_Extend',",
                                "    'Other_ID_Continue',",
                                "    'Other_ID_Start',",
                                "    'Other_Lowercase',",
                                "    'Other_Math',",
                                "    'Other_Uppercase',",
                                "    'Pattern_Syntax',",
                                "    'Pattern_White_Space',",
                                "    'Prepended_Concatenation_Mark',",
                                "    'Quotation_Mark',",
                                "    'Radical',",
                                "    'Regional_Indicator',",
                                "    'Sentence_Terminal',",
                                "    'Soft_Dotted',",
                                "    'Terminal_Punctuation',",
                                "    'Unified_Ideograph',",
                                "    'Uppercase',",
                                "    'Variation_Selector',",
                                "    'White_Space',",
                                "    'XID_Continue',",
                                "    'XID_Start'",
                                "  ],",
                                "  Bidi_Class: [",
                                "    'Arabic_Letter',",
                                "    'Arabic_Number',",
                                "    'Boundary_Neutral',",
                                "    'Common_Separator',",
                                "    'European_Number',",
                                "    'European_Separator',",
                                "    'European_Terminator',",
                                "    'First_Strong_Isolate',",
                                "    'Left_To_Right',",
                                "    'Left_To_Right_Embedding',",
                                "    'Left_To_Right_Isolate',",
                                "    'Left_To_Right_Override',",
                                "    'Nonspacing_Mark',",
                                "    'Other_Neutral',",
                                "    'Paragraph_Separator',",
                                "    'Pop_Directional_Format',",
                                "    'Pop_Directional_Isolate',",
                                "    'Right_To_Left',",
                                "    'Right_To_Left_Embedding',",
                                "    'Right_To_Left_Isolate',",
                                "    'Right_To_Left_Override',",
                                "    'Segment_Separator',",
                                "    'White_Space'",
                                "  ],",
                                "  Script: [",
                                "    'Adlam',",
                                "    'Ahom',",
                                "    'Anatolian_Hieroglyphs',",
                                "    'Arabic',",
                                "    'Armenian',",
                                "    'Avestan',",
                                "    'Balinese',",
                                "    'Bamum',",
                                "    'Bassa_Vah',",
                                "    'Batak',",
                                "    'Bengali',",
                                "    'Bhaiksuki',",
                                "    'Bopomofo',",
                                "    'Brahmi',",
                                "    'Braille',",
                                "    'Buginese',",
                                "    'Buhid',",
                                "    'Canadian_Aboriginal',",
                                "    'Carian',",
                                "    'Caucasian_Albanian',",
                                "    'Chakma',",
                                "    'Cham',",
                                "    'Cherokee',",
                                "    'Chorasmian',",
                                "    'Common',",
                                "    'Coptic',",
                                "    'Cuneiform',",
                                "    'Cypriot',",
                                "    'Cypro_Minoan',",
                                "    'Cyrillic',",
                                "    'Deseret',",
                                "    'Devanagari',",
                                "    'Dives_Akuru',",
                                "    'Dogra',",
                                "    'Duployan',",
                                "    'Egyptian_Hieroglyphs',",
                                "    'Elbasan',",
                                "    'Elymaic',",
                                "    'Ethiopic',",
                                "    'Garay',",
                                "    'Georgian',",
                                "    'Glagolitic',",
                                "    'Gothic',",
                                "    'Grantha',",
                                "    'Greek',",
                                "    'Gujarati',",
                                "    'Gunjala_Gondi',",
                                "    'Gurmukhi',",
                                "    'Gurung_Khema',",
                                "    'Han',",
                                "    'Hangul',",
                                "    'Hanifi_Rohingya',",
                                "    'Hanunoo',",
                                "    'Hatran',",
                                "    'Hebrew',",
                                "    'Hiragana',",
                                "    'Imperial_Aramaic',",
                                "    'Inherited',",
                                "    'Inscriptional_Pahlavi',",
                                "    'Inscriptional_Parthian',",
                                "    'Javanese',",
                                "    'Kaithi',",
                                "    'Kannada',",
                                "    'Katakana',",
                                "    'Kawi',",
                                "    'Kayah_Li',",
                                "    'Kharoshthi',",
                                "    'Khitan_Small_Script',",
                                "    'Khmer',",
                                "    'Khojki',",
                                "    'Khudawadi',",
                                "    'Kirat_Rai',",
                                "    'Lao',",
                                "    'Latin',",
                                "    'Lepcha',",
                                "    'Limbu',",
                                "    'Linear_A',",
                                "    'Linear_B',",
                                "    'Lisu',",
                                "    'Lycian',",
                                "    'Lydian',",
                                "    'Mahajani',",
                                "    'Makasar',",
                                "    'Malayalam',",
                                "    'Mandaic',",
                                "    'Manichaean',",
                                "    'Marchen',",
                                "    'Masaram_Gondi',",
                                "    'Medefaidrin',",
                                "    'Meetei_Mayek',",
                                "    'Mende_Kikakui',",
                                "    'Meroitic_Cursive',",
                                "    'Meroitic_Hieroglyphs',",
                                "    'Miao',",
                                "    'Modi',",
                                "    'Mongolian',",
                                "    'Mro',",
                                "    'Multani',",
                                "    'Myanmar',",
                                "    'Nabataean',",
                                "    ... 70 more items",
                                "  ],",
                                "  Script_Extensions: [",
                                "    'Adlam',",
                                "    'Ahom',",
                                "    'Anatolian_Hieroglyphs',",
                                "    'Arabic',",
                                "    'Armenian',",
                                "    'Avestan',",
                                "    'Balinese',",
                                "    'Bamum',",
                                "    'Bassa_Vah',",
                                "    'Batak',",
                                "    'Bengali',",
                                "    'Bhaiksuki',",
                                "    'Bopomofo',",
                                "    'Brahmi',",
                                "    'Braille',",
                                "    'Buginese',",
                                "    'Buhid',",
                                "    'Canadian_Aboriginal',",
                                "    'Carian',",
                                "    'Caucasian_Albanian',",
                                "    'Chakma',",
                                "    'Cham',",
                                "    'Cherokee',",
                                "    'Chorasmian',",
                                "    'Common',",
                                "    'Coptic',",
                                "    'Cuneiform',",
                                "    'Cypriot',",
                                "    'Cypro_Minoan',",
                                "    'Cyrillic',",
                                "    'Deseret',",
                                "    'Devanagari',",
                                "    'Dives_Akuru',",
                                "    'Dogra',",
                                "    'Duployan',",
                                "    'Egyptian_Hieroglyphs',",
                                "    'Elbasan',",
                                "    'Elymaic',",
                                "    'Ethiopic',",
                                "    'Garay',",
                                "    'Georgian',",
                                "    'Glagolitic',",
                                "    'Gothic',",
                                "    'Grantha',",
                                "    'Greek',",
                                "    'Gujarati',",
                                "    'Gunjala_Gondi',",
                                "    'Gurmukhi',",
                                "    'Gurung_Khema',",
                                "    'Han',",
                                "    'Hangul',",
                                "    'Hanifi_Rohingya',",
                                "    'Hanunoo',",
                                "    'Hatran',",
                                "    'Hebrew',",
                                "    'Hiragana',",
                                "    'Imperial_Aramaic',",
                                "    'Inherited',",
                                "    'Inscriptional_Pahlavi',",
                                "    'Inscriptional_Parthian',",
                                "    'Javanese',",
                                "    'Kaithi',",
                                "    'Kannada',",
                                "    'Katakana',",
                                "    'Kawi',",
                                "    'Kayah_Li',",
                                "    'Kharoshthi',",
                                "    'Khitan_Small_Script',",
                                "    'Khmer',",
                                "    'Khojki',",
                                "    'Khudawadi',",
                                "    'Kirat_Rai',",
                                "    'Lao',",
                                "    'Latin',",
                                "    'Lepcha',",
                                "    'Limbu',",
                                "    'Linear_A',",
                                "    'Linear_B',",
                                "    'Lisu',",
                                "    'Lycian',",
                                "    'Lydian',",
                                "    'Mahajani',",
                                "    'Makasar',",
                                "    'Malayalam',",
                                "    'Mandaic',",
                                "    'Manichaean',",
                                "    'Marchen',",
                                "    'Masaram_Gondi',",
                                "    'Medefaidrin',",
                                "    'Meetei_Mayek',",
                                "    'Mende_Kikakui',",
                                "    'Meroitic_Cursive',",
                                "    'Meroitic_Hieroglyphs',",
                                "    'Miao',",
                                "    'Modi',",
                                "    'Mongolian',",
                                "    'Mro',",
                                "    'Multani',",
                                "    'Myanmar',",
                                "    'Nabataean',",
                                "    ... 70 more items",
                                "  ],",
                                "  Case_Folding: [ 'C', 'F', 'S', 'T' ],",
                                "  Block: [",
                                "    'Adlam',",
                                "    'Aegean_Numbers',",
                                "    'Ahom',",
                                "    'Alchemical_Symbols',",
                                "    'Alphabetic_Presentation_Forms',",
                                "    'Anatolian_Hieroglyphs',",
                                "    'Ancient_Greek_Musical_Notation',",
                                "    'Ancient_Greek_Numbers',",
                                "    'Ancient_Symbols',",
                                "    'Arabic',",
                                "    'Arabic_Extended_A',",
                                "    'Arabic_Extended_B',",
                                "    'Arabic_Extended_C',",
                                "    'Arabic_Mathematical_Alphabetic_Symbols',",
                                "    'Arabic_Presentation_Forms_A',",
                                "    'Arabic_Presentation_Forms_B',",
                                "    'Arabic_Supplement',",
                                "    'Armenian',",
                                "    'Arrows',",
                                "    'Avestan',",
                                "    'Balinese',",
                                "    'Bamum',",
                                "    'Bamum_Supplement',",
                                "    'Basic_Latin',",
                                "    'Bassa_Vah',",
                                "    'Batak',",
                                "    'Bengali',",
                                "    'Bhaiksuki',",
                                "    'Block_Elements',",
                                "    'Bopomofo',",
                                "    'Bopomofo_Extended',",
                                "    'Box_Drawing',",
                                "    'Brahmi',",
                                "    'Braille_Patterns',",
                                "    'Buginese',",
                                "    'Buhid',",
                                "    'Byzantine_Musical_Symbols',",
                                "    'CJK_Compatibility',",
                                "    'CJK_Compatibility_Forms',",
                                "    'CJK_Compatibility_Ideographs',",
                                "    'CJK_Compatibility_Ideographs_Supplement',",
                                "    'CJK_Radicals_Supplement',",
                                "    'CJK_Strokes',",
                                "    'CJK_Symbols_And_Punctuation',",
                                "    'CJK_Unified_Ideographs',",
                                "    'CJK_Unified_Ideographs_Extension_A',",
                                "    'CJK_Unified_Ideographs_Extension_B',",
                                "    'CJK_Unified_Ideographs_Extension_C',",
                                "    'CJK_Unified_Ideographs_Extension_D',",
                                "    'CJK_Unified_Ideographs_Extension_E',",
                                "    'CJK_Unified_Ideographs_Extension_F',",
                                "    'CJK_Unified_Ideographs_Extension_G',",
                                "    'CJK_Unified_Ideographs_Extension_H',",
                                "    'CJK_Unified_Ideographs_Extension_I',",
                                "    'Carian',",
                                "    'Caucasian_Albanian',",
                                "    'Chakma',",
                                "    'Cham',",
                                "    'Cherokee',",
                                "    'Cherokee_Supplement',",
                                "    'Chess_Symbols',",
                                "    'Chorasmian',",
                                "    'Combining_Diacritical_Marks',",
                                "    'Combining_Diacritical_Marks_Extended',",
                                "    'Combining_Diacritical_Marks_For_Symbols',",
                                "    'Combining_Diacritical_Marks_Supplement',",
                                "    'Combining_Half_Marks',",
                                "    'Common_Indic_Number_Forms',",
                                "    'Control_Pictures',",
                                "    'Coptic',",
                                "    'Coptic_Epact_Numbers',",
                                "    'Counting_Rod_Numerals',",
                                "    'Cuneiform',",
                                "    'Cuneiform_Numbers_And_Punctuation',",
                                "    'Currency_Symbols',",
                                "    'Cypriot_Syllabary',",
                                "    'Cypro_Minoan',",
                                "    'Cyrillic',",
                                "    'Cyrillic_Extended_A',",
                                "    'Cyrillic_Extended_B',",
                                "    'Cyrillic_Extended_C',",
                                "    'Cyrillic_Extended_D',",
                                "    'Cyrillic_Supplement',",
                                "    'Deseret',",
                                "    'Devanagari',",
                                "    'Devanagari_Extended',",
                                "    'Devanagari_Extended_A',",
                                "    'Dingbats',",
                                "    'Dives_Akuru',",
                                "    'Dogra',",
                                "    'Domino_Tiles',",
                                "    'Duployan',",
                                "    'Early_Dynastic_Cuneiform',",
                                "    'Egyptian_Hieroglyph_Format_Controls',",
                                "    'Egyptian_Hieroglyphs',",
                                "    'Egyptian_Hieroglyphs_Extended_A',",
                                "    'Elbasan',",
                                "    'Elymaic',",
                                "    'Emoticons',",
                                "    'Enclosed_Alphanumeric_Supplement',",
                                "    ... 238 more items",
                                "  ],",
                                "  Bidi_Mirroring_Glyph: [],",
                                "  Bidi_Paired_Bracket_Type: [ 'Close', 'None', 'Open' ],",
                                "  Line_Break: [",
                                "    'Aksara',",
                                "    'Aksara_Prebase',",
                                "    'Aksara_Start',",
                                "    'Alphabetic',",
                                "    'Ambiguous',",
                                "    'Break_After',",
                                "    'Break_Before',",
                                "    'Break_Both',",
                                "    'Break_Symbols',",
                                "    'Carriage_Return',",
                                "    'Close_Parenthesis',",
                                "    'Close_Punctuation',",
                                "    'Combining_Mark',",
                                "    'Complex_Context',",
                                "    'Conditional_Japanese_Starter',",
                                "    'Contingent_Break',",
                                "    'E_Base',",
                                "    'E_Modifier',",
                                "    'Exclamation',",
                                "    'Glue',",
                                "    'H2',",
                                "    'H3',",
                                "    'Hebrew_Letter',",
                                "    'Hyphen',",
                                "    'Ideographic',",
                                "    'Infix_Numeric',",
                                "    'Inseparable',",
                                "    'JL',",
                                "    'JT',",
                                "    'JV',",
                                "    'Line_Feed',",
                                "    'Mandatory_Break',",
                                "    'Next_Line',",
                                "    'Nonstarter',",
                                "    'Numeric',",
                                "    'Open_Punctuation',",
                                "    'Postfix_Numeric',",
                                "    'Prefix_Numeric',",
                                "    'Quotation',",
                                "    'Regional_Indicator',",
                                "    'Space',",
                                "    'Surrogate',",
                                "    'Unknown',",
                                "    'Virama',",
                                "    'Virama_Final',",
                                "    'Word_Joiner',",
                                "    'ZWJ',",
                                "    'ZWSpace'",
                                "  ],",
                                "  Word_Break: [",
                                "    'ALetter',       'CR',",
                                "    'Double_Quote',  'Extend',",
                                "    'ExtendNumLet',  'Format',",
                                "    'Hebrew_Letter', 'Katakana',",
                                "    'LF',            'MidLetter',",
                                "    'MidNum',        'MidNumLet',",
                                "    'Newline',       'Numeric',",
                                "    'Other',         'Regional_Indicator',",
                                "    'Single_Quote',  'WSegSpace',",
                                "    'ZWJ'",
                                "  ],",
                                "  Sequence_Property: [",
                                "    'Basic_Emoji',",
                                "    'Emoji_Keycap_Sequence',",
                                "    'Emoji_Test',",
                                "    'RGI_Emoji',",
                                "    'RGI_Emoji_Flag_Sequence',",
                                "    'RGI_Emoji_Modifier_Sequence',",
                                "    'RGI_Emoji_Tag_Sequence',",
                                "    'RGI_Emoji_ZWJ_Sequence'",
                                "  ],",
                                "  Names: [ 'Abbreviation', 'Alternate', 'Control', 'Correction', 'Figment' ],",
                                "  Simple_Case_Mapping: [ 'Lowercase', 'Titlecase', 'Uppercase' ],",
                                "  Special_Casing: [",
                                "    'Lowercase',",
                                "    'Lowercase--Final_Sigma',",
                                "    'Lowercase--az',",
                                "    'Lowercase--az--After_I',",
                                "    'Lowercase--az--Not_Before_Dot',",
                                "    'Lowercase--lt',",
                                "    'Lowercase--lt--After_Soft_Dotted',",
                                "    'Lowercase--lt--More_Above',",
                                "    'Lowercase--tr',",
                                "    'Lowercase--tr--After_I',",
                                "    'Lowercase--tr--Not_Before_Dot',",
                                "    'Titlecase',",
                                "    'Titlecase--Final_Sigma',",
                                "    'Titlecase--az',",
                                "    'Titlecase--az--After_I',",
                                "    'Titlecase--az--Not_Before_Dot',",
                                "    'Titlecase--lt',",
                                "    'Titlecase--lt--After_Soft_Dotted',",
                                "    'Titlecase--lt--More_Above',",
                                "    'Titlecase--tr',",
                                "    'Titlecase--tr--After_I',",
                                "    'Titlecase--tr--Not_Before_Dot',",
                                "    'Uppercase',",
                                "    'Uppercase--Final_Sigma',",
                                "    'Uppercase--az',",
                                "    'Uppercase--az--After_I',",
                                "    'Uppercase--az--Not_Before_Dot',",
                                "    'Uppercase--lt',",
                                "    'Uppercase--lt--After_Soft_Dotted',",
                                "    'Uppercase--lt--More_Above',",
                                "    'Uppercase--tr',",
                                "    'Uppercase--tr--After_I',",
                                "    'Uppercase--tr--Not_Before_Dot'",
                                "  ]",
                                "}",
                                "",
                                ""
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                "# Names\r\nA Map of the names of all Unicode characters"
            ],
            "outputs": []
        },
        {
            "language": "typescript",
            "source": [
                "import names from \"@unicode/unicode-16.0.0/Names\"\r\n\r\n// Names is a map\r\nconsole.log(\"Names is a Map of size\",names.size, \" entries\\n\",\r\n    32, names.get(32))"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "application/vnd.code.notebook.stdout",
                            "value": [
                                "Names is a Map of size 294579  entries",
                                " 32 SPACE",
                                "",
                                ""
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                "## How to get the category of any codepoint\r\n\r\nimport the **General_Category/index.js** file. It holds a Map for all codepoints"
            ],
            "outputs": []
        },
        {
            "language": "typescript",
            "source": [
                "import GeneralCategoryIndex from \"@unicode/unicode-16.0.0/General_Category/index.js\"\r\nimport names from \"@unicode/unicode-16.0.0/Names\"\r\nconsole.log(\r\n    // Object.getOwnPropertyNames(unicode.default),\r\n    // unicode.default.General_Category),\r\n    \"NamesIndex is a \",Object.getPrototypeOf(GeneralCategoryIndex),\"\\n\",\r\n    \"\\nMap contains \",GeneralCategoryIndex.size,\"codepoints\",\r\n    \r\n    \"\\nGeneral category of \",names.get(32),\"is\", GeneralCategoryIndex.get(32)\r\n)"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "application/vnd.code.notebook.stdout",
                            "value": [
                                "NamesIndex is a  Object [Map] {} ",
                                " ",
                                "Map contains  1114112 codepoints ",
                                "General category of  SPACE is Space_Separator",
                                "",
                                ""
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                "# General_Category\r\n\r\nThe General_Category of the main object contains an array of all possible categories."
            ],
            "outputs": []
        },
        {
            "language": "typescript",
            "source": [
                "\r\nconsole.log(\r\n    \"General_Category is \", Object.getPrototypeOf(unicode.default.General_Category), \"\\nEnumeration is \",\r\n    unicode.default.General_Category,\r\n    \"\\nThere are \",unicode.default.General_Category.length, \"general categories\\n\",\r\n    \"\\ncategory 0 is\", unicode.default.General_Category[0])"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "application/vnd.code.notebook.stdout",
                            "value": [
                                "General_Category is  Object(0) [] ",
                                "Enumeration is  [",
                                "  'Cased_Letter',          'Close_Punctuation',",
                                "  'Connector_Punctuation', 'Control',",
                                "  'Currency_Symbol',       'Dash_Punctuation',",
                                "  'Decimal_Number',        'Enclosing_Mark',",
                                "  'Final_Punctuation',     'Format',",
                                "  'Initial_Punctuation',   'Letter',",
                                "  'Letter_Number',         'Line_Separator',",
                                "  'Lowercase_Letter',      'Mark',",
                                "  'Math_Symbol',           'Modifier_Letter',",
                                "  'Modifier_Symbol',       'Nonspacing_Mark',",
                                "  'Number',                'Open_Punctuation',",
                                "  'Other',                 'Other_Letter',",
                                "  'Other_Number',          'Other_Punctuation',",
                                "  'Other_Symbol',          'Paragraph_Separator',",
                                "  'Private_Use',           'Punctuation',",
                                "  'Separator',             'Space_Separator',",
                                "  'Spacing_Mark',          'Surrogate',",
                                "  'Symbol',                'Titlecase_Letter',",
                                "  'Unassigned',            'Uppercase_Letter'",
                                "] ",
                                "There are  38 general categories",
                                " ",
                                "category 0 is Cased_Letter",
                                "",
                                ""
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                "# Bidi_Class\r\n\r\nThe Bidi_Class of the main object contains an array of all possible values"
            ],
            "outputs": []
        },
        {
            "language": "typescript",
            "source": [
                "console.log(\r\n    \"Bidi_Category is \", Object.getPrototypeOf(unicode.default.Bidi_Class), \"\\nEnumeration is \",\r\n    unicode.default.Bidi_Class,\r\n    \"\\nThere are \",unicode.default.Bidi_Class.length, \"bidi categories\\n\",\r\n    \"\\nBidi_Category 0 is\", unicode.default.Bidi_Class[0])"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "application/vnd.code.notebook.stdout",
                            "value": [
                                "Bidi_Category is  Object(0) [] ",
                                "Enumeration is  [",
                                "  'Arabic_Letter',",
                                "  'Arabic_Number',",
                                "  'Boundary_Neutral',",
                                "  'Common_Separator',",
                                "  'European_Number',",
                                "  'European_Separator',",
                                "  'European_Terminator',",
                                "  'First_Strong_Isolate',",
                                "  'Left_To_Right',",
                                "  'Left_To_Right_Embedding',",
                                "  'Left_To_Right_Isolate',",
                                "  'Left_To_Right_Override',",
                                "  'Nonspacing_Mark',",
                                "  'Other_Neutral',",
                                "  'Paragraph_Separator',",
                                "  'Pop_Directional_Format',",
                                "  'Pop_Directional_Isolate',",
                                "  'Right_To_Left',",
                                "  'Right_To_Left_Embedding',",
                                "  'Right_To_Left_Isolate',",
                                "  'Right_To_Left_Override',",
                                "  'Segment_Separator',",
                                "  'White_Space'",
                                "] ",
                                "There are  23 bidi categories",
                                " ",
                                "Bidi_Category 0 is Arabic_Letter",
                                "",
                                ""
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                "## "
            ],
            "outputs": []
        },
        {
            "language": "typescript",
            "source": [
                ""
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "For some categories, @unicde/unicode-16.0.0 contains multiple objects\r\n\r\nThe object defines all possible values as array-like\r\nSub modules define :\r\n- \"symbols.js\" : the list of characters in the category\r\n- \"codepoints.js\" : the list of characters in the category\r\n- \"ranges.js\" : the list of intervals of characters in the category\r\n- \"regex.js\" : the list of intervals of characters in the category"
            ],
            "outputs": []
        },
        {
            "language": "typescript",
            "source": [
                "import uppercaseSymbols from '@unicode/unicode-16.0.0/General_Category/Uppercase_Letter/symbols.js';\r\n// for each category, ranges.js contains an array of UnicodeRange (begin, end, length)\r\nimport uppercaseRanges from '@unicode/unicode-16.0.0/General_Category/Uppercase_Letter/ranges.js';\r\nimport uppercaseCodepoints from '@unicode/unicode-16.0.0/General_Category/Uppercase_Letter/code-points.js';\r\n\r\nconsole.log(\"Uppercase (first 40 codepoints)\\n\\n\",\r\n    \"\\n\\nsymbols\\n\", uppercaseSymbols.slice(0,40),\"\\n...\",\r\n    \"\\n\\nuppercaseCodepoints\\n\", uppercaseCodepoints.slice(0,40),\"\\n...\",\r\n    \"\\n\\nranges\\n\", uppercaseRanges.slice(0,10),\"\\n...\"\r\n)"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "application/vnd.code.notebook.stdout",
                            "value": [
                                "Uppercase (first 40 codepoints)",
                                "",
                                " ",
                                "",
                                "symbols",
                                " [",
                                "  'A', 'B', 'C', 'D', 'E', 'F', 'G',",
                                "  'H', 'I', 'J', 'K', 'L', 'M', 'N',",
                                "  'O', 'P', 'Q', 'R', 'S', 'T', 'U',",
                                "  'V', 'W', 'X', 'Y', 'Z', 'À', 'Á',",
                                "  'Â', 'Ã', 'Ä', 'Å', 'Æ', 'Ç', 'È',",
                                "  'É', 'Ê', 'Ë', 'Ì', 'Í'",
                                "] ",
                                "... ",
                                "",
                                "uppercaseCodepoints",
                                " [",
                                "   65,  66,  67,  68,  69,  70,  71,  72,  73,",
                                "   74,  75,  76,  77,  78,  79,  80,  81,  82,",
                                "   83,  84,  85,  86,  87,  88,  89,  90, 192,",
                                "  193, 194, 195, 196, 197, 198, 199, 200, 201,",
                                "  202, 203, 204, 205",
                                "] ",
                                "... ",
                                "",
                                "ranges",
                                " [",
                                "  UnicodeRange { begin: 65, end: 91, length: 26 },",
                                "  UnicodeRange { begin: 192, end: 215, length: 23 },",
                                "  UnicodeRange { begin: 216, end: 223, length: 7 },",
                                "  UnicodeRange { begin: 256, end: 257, length: 1 },",
                                "  UnicodeRange { begin: 258, end: 259, length: 1 },",
                                "  UnicodeRange { begin: 260, end: 261, length: 1 },",
                                "  UnicodeRange { begin: 262, end: 263, length: 1 },",
                                "  UnicodeRange { begin: 264, end: 265, length: 1 },",
                                "  UnicodeRange { begin: 266, end: 267, length: 1 },",
                                "  UnicodeRange { begin: 268, end: 269, length: 1 }",
                                "] ",
                                "...",
                                "",
                                ""
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "typescript",
            "source": [
                ""
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "## Brackets\r\n\r\nLib contains information about brackets :\r\n- lists of opening and closing brackets, and their regular eppressions\r\n"
            ],
            "outputs": []
        },
        {
            "language": "typescript",
            "source": [
                "\r\n// a Map<int, string>\r\nimport Mirrored from '@unicode/unicode-16.0.0/Bidi_Mirroring_Glyph/index.js'\r\n\r\n// Bidi_Paired_Bracket_Type/Open/symbols.js and Close/symbols.js' are Array-likes\r\nimport openBrackets from '@unicode/unicode-16.0.0/Bidi_Paired_Bracket_Type/Open/symbols.js'\r\nimport closeBrackets from '@unicode/unicode-16.0.0/Bidi_Paired_Bracket_Type/Close/symbols.js'\r\n\r\n// RegExp\r\nimport openBracketRegex from '@unicode/unicode-16.0.0/Bidi_Paired_Bracket_Type/Open/regex.js'\r\nimport closeBracketRegex from '@unicode/unicode-16.0.0/Bidi_Paired_Bracket_Type/Close/regex.js'\r\n\r\nconsole.log(\r\n    \"All opening brackets\\n\",openBrackets,\"\\nAll closing brackets\\n\",closeBrackets,\"\\n\\n\",\r\n    \"Regexp to detect opening brackets\\n\", openBracketRegex, \"\\n\\n\",\r\n    \"Regexp to match closing brackets\\n\", closeBracketRegex, \"\\n\\n\",\r\n    \"Mirrored (Map of mirrored characters - more than brackets)\\n\", Mirrored\r\n)"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "application/vnd.code.notebook.stdout",
                            "value": [
                                "All opening brackets",
                                " [",
                                "  '(',  '[',  '{',  '༺',  '༼',  '᚛',  '⁅',  '⁽',  '₍',",
                                "  '⌈',  '⌊',  '〈', '❨',  '❪',  '❬',  '❮',  '❰',  '❲',",
                                "  '❴',  '⟅',  '⟦',  '⟨',  '⟪',  '⟬',  '⟮',  '⦃',  '⦅',",
                                "  '⦇',  '⦉',  '⦋',  '⦍',  '⦏',  '⦑',  '⦓',  '⦕',  '⦗',",
                                "  '⧘',  '⧚',  '⧼',  '⸢',  '⸤',  '⸦',  '⸨',  '⹕',  '⹗',",
                                "  '⹙',  '⹛',  '〈', '《', '「', '『', '【', '〔', '〖',",
                                "  '〘', '〚', '﹙', '﹛', '﹝', '（', '［', '｛', '｟',",
                                "  '｢'",
                                "] ",
                                "All closing brackets",
                                " [",
                                "  ')',  ']',  '}',  '༻',  '༽',  '᚜',  '⁆',  '⁾',  '₎',",
                                "  '⌉',  '⌋',  '〉', '❩',  '❫',  '❭',  '❯',  '❱',  '❳',",
                                "  '❵',  '⟆',  '⟧',  '⟩',  '⟫',  '⟭',  '⟯',  '⦄',  '⦆',",
                                "  '⦈',  '⦊',  '⦌',  '⦎',  '⦐',  '⦒',  '⦔',  '⦖',  '⦘',",
                                "  '⧙',  '⧛',  '⧽',  '⸣',  '⸥',  '⸧',  '⸩',  '⹖',  '⹘',",
                                "  '⹚',  '⹜',  '〉', '》', '」', '』', '】', '〕', '〗',",
                                "  '〙', '〛', '﹚', '﹜', '﹞', '）', '］', '｝', '｠',",
                                "  '｣'",
                                "] ",
                                "",
                                " Regexp to detect opening brackets",
                                " /[\\(\\[\\{\\u0F3A\\u0F3C\\u169B\\u2045\\u207D\\u208D\\u2308\\u230A\\u2329\\u2768\\u276A\\u276C\\u276E\\u2770\\u2772\\u2774\\u27C5\\u27E6\\u27E8\\u27EA\\u27EC\\u27EE\\u2983\\u2985\\u2987\\u2989\\u298B\\u298D\\u298F\\u2991\\u2993\\u2995\\u2997\\u29D8\\u29DA\\u29FC\\u2E22\\u2E24\\u2E26\\u2E28\\u2E55\\u2E57\\u2E59\\u2E5B\\u3008\\u300A\\u300C\\u300E\\u3010\\u3014\\u3016\\u3018\\u301A\\uFE59\\uFE5B\\uFE5D\\uFF08\\uFF3B\\uFF5B\\uFF5F\\uFF62]/ ",
                                "",
                                " Regexp to match closing brackets",
                                " /[\\)\\]\\}\\u0F3B\\u0F3D\\u169C\\u2046\\u207E\\u208E\\u2309\\u230B\\u232A\\u2769\\u276B\\u276D\\u276F\\u2771\\u2773\\u2775\\u27C6\\u27E7\\u27E9\\u27EB\\u27ED\\u27EF\\u2984\\u2986\\u2988\\u298A\\u298C\\u298E\\u2990\\u2992\\u2994\\u2996\\u2998\\u29D9\\u29DB\\u29FD\\u2E23\\u2E25\\u2E27\\u2E29\\u2E56\\u2E58\\u2E5A\\u2E5C\\u3009\\u300B\\u300D\\u300F\\u3011\\u3015\\u3017\\u3019\\u301B\\uFE5A\\uFE5C\\uFE5E\\uFF09\\uFF3D\\uFF5D\\uFF60\\uFF63]/ ",
                                "",
                                " Mirrored (Map of mirrored characters - more than brackets)",
                                " Map(428) {",
                                "  40 => ')',",
                                "  41 => '(',",
                                "  60 => '>',",
                                "  62 => '<',",
                                "  91 => ']',",
                                "  93 => '[',",
                                "  123 => '}',",
                                "  125 => '{',",
                                "  171 => '»',",
                                "  187 => '«',",
                                "  3898 => '༻',",
                                "  3899 => '༺',",
                                "  3900 => '༽',",
                                "  3901 => '༼',",
                                "  5787 => '᚜',",
                                "  5788 => '᚛',",
                                "  8249 => '›',",
                                "  8250 => '‹',",
                                "  8261 => '⁆',",
                                "  8262 => '⁅',",
                                "  8317 => '⁾',",
                                "  8318 => '⁽',",
                                "  8333 => '₎',",
                                "  8334 => '₍',",
                                "  8712 => '∋',",
                                "  8715 => '∈',",
                                "  8713 => '∌',",
                                "  8716 => '∉',",
                                "  8714 => '∍',",
                                "  8717 => '∊',",
                                "  8725 => '⧵',",
                                "  10741 => '∕',",
                                "  8735 => '⯾',",
                                "  11262 => '∟',",
                                "  8736 => '⦣',",
                                "  10659 => '∠',",
                                "  8737 => '⦛',",
                                "  10651 => '∡',",
                                "  8738 => '⦠',",
                                "  10656 => '∢',",
                                "  8740 => '⫮',",
                                "  10990 => '∤',",
                                "  8764 => '∽',",
                                "  8765 => '∼',",
                                "  8771 => '⋍',",
                                "  8909 => '≃',",
                                "  8773 => '≌',",
                                "  8780 => '≅',",
                                "  8786 => '≓',",
                                "  8787 => '≒',",
                                "  8788 => '≕',",
                                "  8789 => '≔',",
                                "  8804 => '≥',",
                                "  8805 => '≤',",
                                "  8806 => '≧',",
                                "  8807 => '≦',",
                                "  8808 => '≩',",
                                "  8809 => '≨',",
                                "  8810 => '≫',",
                                "  8811 => '≪',",
                                "  8814 => '≯',",
                                "  8815 => '≮',",
                                "  8816 => '≱',",
                                "  8817 => '≰',",
                                "  8818 => '≳',",
                                "  8819 => '≲',",
                                "  8820 => '≵',",
                                "  8821 => '≴',",
                                "  8822 => '≷',",
                                "  8823 => '≶',",
                                "  8824 => '≹',",
                                "  8825 => '≸',",
                                "  8826 => '≻',",
                                "  8827 => '≺',",
                                "  8828 => '≽',",
                                "  8829 => '≼',",
                                "  8830 => '≿',",
                                "  8831 => '≾',",
                                "  8832 => '⊁',",
                                "  8833 => '⊀',",
                                "  8834 => '⊃',",
                                "  8835 => '⊂',",
                                "  8836 => '⊅',",
                                "  8837 => '⊄',",
                                "  8838 => '⊇',",
                                "  8839 => '⊆',",
                                "  8840 => '⊉',",
                                "  8841 => '⊈',",
                                "  8842 => '⊋',",
                                "  8843 => '⊊',",
                                "  8847 => '⊐',",
                                "  8848 => '⊏',",
                                "  8849 => '⊒',",
                                "  8850 => '⊑',",
                                "  8856 => '⦸',",
                                "  10680 => '⊘',",
                                "  8866 => '⊣',",
                                "  8867 => '⊢',",
                                "  8870 => '⫞',",
                                "  10974 => '⊦',",
                                "  ... 328 more items",
                                "}",
                                "",
                                ""
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                "## Currency"
            ],
            "outputs": []
        },
        {
            "language": "typescript",
            "source": [
                "const CURRENCY = require('@unicode/unicode-16.0.0/General_Category/Currency_Symbol/symbols.js');\r\nconsole.log(\"Currency symbols\\n\",CURRENCY)\r\nconsole.log(require('@unicode/unicode-16.0.0/General_Category/Currency_Symbol/regex.js'))"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "application/vnd.code.notebook.stdout",
                            "value": [
                                "Currency symbols",
                                " [",
                                "  '$',  '¢',  '£',  '¤', '¥', '֏', '؋',  '߾',  '߿',",
                                "  '৲',  '৳',  '৻',  '૱', '௹', '฿', '៛',  '₠',  '₡',",
                                "  '₢',  '₣',  '₤',  '₥', '₦', '₧', '₨',  '₩',  '₪',",
                                "  '₫',  '€',  '₭',  '₮', '₯', '₰', '₱',  '₲',  '₳',",
                                "  '₴',  '₵',  '₶',  '₷', '₸', '₹', '₺',  '₻',  '₼',",
                                "  '₽',  '₾',  '₿',  '⃀', '꠸', '﷼', '﹩', '＄', '￠',",
                                "  '￡', '￥', '￦', '𑿝', '𑿞', '𑿟', '𑿠',  '𞋿',  '𞲰'",
                                "]",
                                "/[\\$\\xA2-\\xA5\\u058F\\u060B\\u07FE\\u07FF\\u09F2\\u09F3\\u09FB\\u0AF1\\u0BF9\\u0E3F\\u17DB\\u20A0-\\u20C0\\uA838\\uFDFC\\uFE69\\uFF04\\uFFE0\\uFFE1\\uFFE5\\uFFE6]|\\uD807[\\uDFDD-\\uDFE0]|\\uD838\\uDEFF|\\uD83B\\uDCB0/",
                                "",
                                ""
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                "## Abbreviations for some symbols\r\n\r\nUnicode makes use of numerous hidden characters for layout. Most of them have an abbreviation, some have several\r\n\r\nThis is the case of ASCII control characters"
            ],
            "outputs": []
        },
        {
            "language": "typescript",
            "source": [
                "\r\nimport Abbreviation from '@unicode/unicode-16.0.0/Names/Abbreviation/index.js'; // lookup map from code point to aliases\r\nimport names from \"@unicode/unicode-16.0.0/Names\"\r\n\r\n// warning : Abbreviation keys are strings\r\nconst items = Object.keys(Abbreviation).map(a \r\n    => `${a.padStart(6)}: ${Abbreviation[a].join(\",\").padStart(5)} (${names.get(parseInt(a))})`)\r\n\r\n// console.log(Object.getOwnPropertyNames(Abbreviation[1564]))\r\n\r\nconsole.log(items.join(\"\\n\"))\r\n// console.log(\"Abbreviation\", typeof Abbreviation, Abbreviation)"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "application/vnd.code.notebook.stdout",
                            "value": [
                                "     0:   NUL (<control>)",
                                "     1:   SOH (<control>)",
                                "     2:   STX (<control>)",
                                "     3:   ETX (<control>)",
                                "     4:   EOT (<control>)",
                                "     5:   ENQ (<control>)",
                                "     6:   ACK (<control>)",
                                "     7:   BEL (<control>)",
                                "     8:    BS (<control>)",
                                "     9: HT,TAB (<control>)",
                                "    10: LF,NL,EOL (<control>)",
                                "    11:    VT (<control>)",
                                "    12:    FF (<control>)",
                                "    13:    CR (<control>)",
                                "    14:    SO (<control>)",
                                "    15:    SI (<control>)",
                                "    16:   DLE (<control>)",
                                "    17:   DC1 (<control>)",
                                "    18:   DC2 (<control>)",
                                "    19:   DC3 (<control>)",
                                "    20:   DC4 (<control>)",
                                "    21:   NAK (<control>)",
                                "    22:   SYN (<control>)",
                                "    23:   ETB (<control>)",
                                "    24:   CAN (<control>)",
                                "    25: EOM,EM (<control>)",
                                "    26:   SUB (<control>)",
                                "    27:   ESC (<control>)",
                                "    28:    FS (<control>)",
                                "    29:    GS (<control>)",
                                "    30:    RS (<control>)",
                                "    31:    US (<control>)",
                                "    32:    SP (SPACE)",
                                "   127:   DEL (<control>)",
                                "   128:   PAD (<control>)",
                                "   129:   HOP (<control>)",
                                "   130:   BPH (<control>)",
                                "   131:   NBH (<control>)",
                                "   132:   IND (<control>)",
                                "   133:   NEL (<control>)",
                                "   134:   SSA (<control>)",
                                "   135:   ESA (<control>)",
                                "   136:   HTS (<control>)",
                                "   137:   HTJ (<control>)",
                                "   138:   VTS (<control>)",
                                "   139:   PLD (<control>)",
                                "   140:   PLU (<control>)",
                                "   141:    RI (<control>)",
                                "   142:   SS2 (<control>)",
                                "   143:   SS3 (<control>)",
                                "   144:   DCS (<control>)",
                                "   145:   PU1 (<control>)",
                                "   146:   PU2 (<control>)",
                                "   147:   STS (<control>)",
                                "   148:   CCH (<control>)",
                                "   149:    MW (<control>)",
                                "   150:   SPA (<control>)",
                                "   151:   EPA (<control>)",
                                "   152:   SOS (<control>)",
                                "   153:   SGC (<control>)",
                                "   154:   SCI (<control>)",
                                "   155:   CSI (<control>)",
                                "   156:    ST (<control>)",
                                "   157:   OSC (<control>)",
                                "   158:    PM (<control>)",
                                "   159:   APC (<control>)",
                                "   160:  NBSP (NO-BREAK SPACE)",
                                "   173:   SHY (SOFT HYPHEN)",
                                "   847:   CGJ (COMBINING GRAPHEME JOINER)",
                                "  1564:   ALM (ARABIC LETTER MARK)",
                                "  6155:  FVS1 (MONGOLIAN FREE VARIATION SELECTOR ONE)",
                                "  6156:  FVS2 (MONGOLIAN FREE VARIATION SELECTOR TWO)",
                                "  6157:  FVS3 (MONGOLIAN FREE VARIATION SELECTOR THREE)",
                                "  6158:   MVS (MONGOLIAN VOWEL SEPARATOR)",
                                "  6159:  FVS4 (MONGOLIAN FREE VARIATION SELECTOR FOUR)",
                                "  8203:  ZWSP (ZERO WIDTH SPACE)",
                                "  8204:  ZWNJ (ZERO WIDTH NON-JOINER)",
                                "  8205:   ZWJ (ZERO WIDTH JOINER)",
                                "  8206:   LRM (LEFT-TO-RIGHT MARK)",
                                "  8207:   RLM (RIGHT-TO-LEFT MARK)",
                                "  8234:   LRE (LEFT-TO-RIGHT EMBEDDING)",
                                "  8235:   RLE (RIGHT-TO-LEFT EMBEDDING)",
                                "  8236:   PDF (POP DIRECTIONAL FORMATTING)",
                                "  8237:   LRO (LEFT-TO-RIGHT OVERRIDE)",
                                "  8238:   RLO (RIGHT-TO-LEFT OVERRIDE)",
                                "  8239: NNBSP (NARROW NO-BREAK SPACE)",
                                "  8287:  MMSP (MEDIUM MATHEMATICAL SPACE)",
                                "  8288:    WJ (WORD JOINER)",
                                "  8294:   LRI (LEFT-TO-RIGHT ISOLATE)",
                                "  8295:   RLI (RIGHT-TO-LEFT ISOLATE)",
                                "  8296:   FSI (FIRST STRONG ISOLATE)",
                                "  8297:   PDI (POP DIRECTIONAL ISOLATE)",
                                " 65024:   VS1 (VARIATION SELECTOR-1)",
                                " 65025:   VS2 (VARIATION SELECTOR-2)",
                                " 65026:   VS3 (VARIATION SELECTOR-3)",
                                " 65027:   VS4 (VARIATION SELECTOR-4)",
                                " 65028:   VS5 (VARIATION SELECTOR-5)",
                                " 65029:   VS6 (VARIATION SELECTOR-6)",
                                " 65030:   VS7 (VARIATION SELECTOR-7)",
                                " 65031:   VS8 (VARIATION SELECTOR-8)",
                                " 65032:   VS9 (VARIATION SELECTOR-9)",
                                " 65033:  VS10 (VARIATION SELECTOR-10)",
                                " 65034:  VS11 (VARIATION SELECTOR-11)",
                                " 65035:  VS12 (VARIATION SELECTOR-12)",
                                " 65036:  VS13 (VARIATION SELECTOR-13)",
                                " 65037:  VS14 (VARIATION SELECTOR-14)",
                                " 65038:  VS15 (VARIATION SELECTOR-15)",
                                " 65039:  VS16 (VARIATION SELECTOR-16)",
                                " 65279: BOM,ZWNBSP (ZERO WIDTH NO-BREAK SPACE)",
                                "917760:  VS17 (VARIATION SELECTOR-17)",
                                "917761:  VS18 (VARIATION SELECTOR-18)",
                                "917762:  VS19 (VARIATION SELECTOR-19)",
                                "917763:  VS20 (VARIATION SELECTOR-20)",
                                "917764:  VS21 (VARIATION SELECTOR-21)",
                                "917765:  VS22 (VARIATION SELECTOR-22)",
                                "917766:  VS23 (VARIATION SELECTOR-23)",
                                "917767:  VS24 (VARIATION SELECTOR-24)",
                                "917768:  VS25 (VARIATION SELECTOR-25)",
                                "917769:  VS26 (VARIATION SELECTOR-26)",
                                "917770:  VS27 (VARIATION SELECTOR-27)",
                                "917771:  VS28 (VARIATION SELECTOR-28)",
                                "917772:  VS29 (VARIATION SELECTOR-29)",
                                "917773:  VS30 (VARIATION SELECTOR-30)",
                                "917774:  VS31 (VARIATION SELECTOR-31)",
                                "917775:  VS32 (VARIATION SELECTOR-32)",
                                "917776:  VS33 (VARIATION SELECTOR-33)",
                                "917777:  VS34 (VARIATION SELECTOR-34)",
                                "917778:  VS35 (VARIATION SELECTOR-35)",
                                "917779:  VS36 (VARIATION SELECTOR-36)",
                                "917780:  VS37 (VARIATION SELECTOR-37)",
                                "917781:  VS38 (VARIATION SELECTOR-38)",
                                "917782:  VS39 (VARIATION SELECTOR-39)",
                                "917783:  VS40 (VARIATION SELECTOR-40)",
                                "917784:  VS41 (VARIATION SELECTOR-41)",
                                "917785:  VS42 (VARIATION SELECTOR-42)",
                                "917786:  VS43 (VARIATION SELECTOR-43)",
                                "917787:  VS44 (VARIATION SELECTOR-44)",
                                "917788:  VS45 (VARIATION SELECTOR-45)",
                                "917789:  VS46 (VARIATION SELECTOR-46)",
                                "917790:  VS47 (VARIATION SELECTOR-47)",
                                "917791:  VS48 (VARIATION SELECTOR-48)",
                                "917792:  VS49 (VARIATION SELECTOR-49)",
                                "917793:  VS50 (VARIATION SELECTOR-50)",
                                "917794:  VS51 (VARIATION SELECTOR-51)",
                                "917795:  VS52 (VARIATION SELECTOR-52)",
                                "917796:  VS53 (VARIATION SELECTOR-53)",
                                "917797:  VS54 (VARIATION SELECTOR-54)",
                                "917798:  VS55 (VARIATION SELECTOR-55)",
                                "917799:  VS56 (VARIATION SELECTOR-56)",
                                "917800:  VS57 (VARIATION SELECTOR-57)",
                                "917801:  VS58 (VARIATION SELECTOR-58)",
                                "917802:  VS59 (VARIATION SELECTOR-59)",
                                "917803:  VS60 (VARIATION SELECTOR-60)",
                                "917804:  VS61 (VARIATION SELECTOR-61)",
                                "917805:  VS62 (VARIATION SELECTOR-62)",
                                "917806:  VS63 (VARIATION SELECTOR-63)",
                                "917807:  VS64 (VARIATION SELECTOR-64)",
                                "917808:  VS65 (VARIATION SELECTOR-65)",
                                "917809:  VS66 (VARIATION SELECTOR-66)",
                                "917810:  VS67 (VARIATION SELECTOR-67)",
                                "917811:  VS68 (VARIATION SELECTOR-68)",
                                "917812:  VS69 (VARIATION SELECTOR-69)",
                                "917813:  VS70 (VARIATION SELECTOR-70)",
                                "917814:  VS71 (VARIATION SELECTOR-71)",
                                "917815:  VS72 (VARIATION SELECTOR-72)",
                                "917816:  VS73 (VARIATION SELECTOR-73)",
                                "917817:  VS74 (VARIATION SELECTOR-74)",
                                "917818:  VS75 (VARIATION SELECTOR-75)",
                                "917819:  VS76 (VARIATION SELECTOR-76)",
                                "917820:  VS77 (VARIATION SELECTOR-77)",
                                "917821:  VS78 (VARIATION SELECTOR-78)",
                                "917822:  VS79 (VARIATION SELECTOR-79)",
                                "917823:  VS80 (VARIATION SELECTOR-80)",
                                "917824:  VS81 (VARIATION SELECTOR-81)",
                                "917825:  VS82 (VARIATION SELECTOR-82)",
                                "917826:  VS83 (VARIATION SELECTOR-83)",
                                "917827:  VS84 (VARIATION SELECTOR-84)",
                                "917828:  VS85 (VARIATION SELECTOR-85)",
                                "917829:  VS86 (VARIATION SELECTOR-86)",
                                "917830:  VS87 (VARIATION SELECTOR-87)",
                                "917831:  VS88 (VARIATION SELECTOR-88)",
                                "917832:  VS89 (VARIATION SELECTOR-89)",
                                "917833:  VS90 (VARIATION SELECTOR-90)",
                                "917834:  VS91 (VARIATION SELECTOR-91)",
                                "917835:  VS92 (VARIATION SELECTOR-92)",
                                "917836:  VS93 (VARIATION SELECTOR-93)",
                                "917837:  VS94 (VARIATION SELECTOR-94)",
                                "917838:  VS95 (VARIATION SELECTOR-95)",
                                "917839:  VS96 (VARIATION SELECTOR-96)",
                                "917840:  VS97 (VARIATION SELECTOR-97)",
                                "917841:  VS98 (VARIATION SELECTOR-98)",
                                "917842:  VS99 (VARIATION SELECTOR-99)",
                                "917843: VS100 (VARIATION SELECTOR-100)",
                                "917844: VS101 (VARIATION SELECTOR-101)",
                                "917845: VS102 (VARIATION SELECTOR-102)",
                                "917846: VS103 (VARIATION SELECTOR-103)",
                                "917847: VS104 (VARIATION SELECTOR-104)",
                                "917848: VS105 (VARIATION SELECTOR-105)",
                                "917849: VS106 (VARIATION SELECTOR-106)",
                                "917850: VS107 (VARIATION SELECTOR-107)",
                                "917851: VS108 (VARIATION SELECTOR-108)",
                                "917852: VS109 (VARIATION SELECTOR-109)",
                                "917853: VS110 (VARIATION SELECTOR-110)",
                                "917854: VS111 (VARIATION SELECTOR-111)",
                                "917855: VS112 (VARIATION SELECTOR-112)",
                                "917856: VS113 (VARIATION SELECTOR-113)",
                                "917857: VS114 (VARIATION SELECTOR-114)",
                                "917858: VS115 (VARIATION SELECTOR-115)",
                                "917859: VS116 (VARIATION SELECTOR-116)",
                                "917860: VS117 (VARIATION SELECTOR-117)",
                                "917861: VS118 (VARIATION SELECTOR-118)",
                                "917862: VS119 (VARIATION SELECTOR-119)",
                                "917863: VS120 (VARIATION SELECTOR-120)",
                                "917864: VS121 (VARIATION SELECTOR-121)",
                                "917865: VS122 (VARIATION SELECTOR-122)",
                                "917866: VS123 (VARIATION SELECTOR-123)",
                                "917867: VS124 (VARIATION SELECTOR-124)",
                                "917868: VS125 (VARIATION SELECTOR-125)",
                                "917869: VS126 (VARIATION SELECTOR-126)",
                                "917870: VS127 (VARIATION SELECTOR-127)",
                                "917871: VS128 (VARIATION SELECTOR-128)",
                                "917872: VS129 (VARIATION SELECTOR-129)",
                                "917873: VS130 (VARIATION SELECTOR-130)",
                                "917874: VS131 (VARIATION SELECTOR-131)",
                                "917875: VS132 (VARIATION SELECTOR-132)",
                                "917876: VS133 (VARIATION SELECTOR-133)",
                                "917877: VS134 (VARIATION SELECTOR-134)",
                                "917878: VS135 (VARIATION SELECTOR-135)",
                                "917879: VS136 (VARIATION SELECTOR-136)",
                                "917880: VS137 (VARIATION SELECTOR-137)",
                                "917881: VS138 (VARIATION SELECTOR-138)",
                                "917882: VS139 (VARIATION SELECTOR-139)",
                                "917883: VS140 (VARIATION SELECTOR-140)",
                                "917884: VS141 (VARIATION SELECTOR-141)",
                                "917885: VS142 (VARIATION SELECTOR-142)",
                                "917886: VS143 (VARIATION SELECTOR-143)",
                                "917887: VS144 (VARIATION SELECTOR-144)",
                                "917888: VS145 (VARIATION SELECTOR-145)",
                                "917889: VS146 (VARIATION SELECTOR-146)",
                                "917890: VS147 (VARIATION SELECTOR-147)",
                                "917891: VS148 (VARIATION SELECTOR-148)",
                                "917892: VS149 (VARIATION SELECTOR-149)",
                                "917893: VS150 (VARIATION SELECTOR-150)",
                                "917894: VS151 (VARIATION SELECTOR-151)",
                                "917895: VS152 (VARIATION SELECTOR-152)",
                                "917896: VS153 (VARIATION SELECTOR-153)",
                                "917897: VS154 (VARIATION SELECTOR-154)",
                                "917898: VS155 (VARIATION SELECTOR-155)",
                                "917899: VS156 (VARIATION SELECTOR-156)",
                                "917900: VS157 (VARIATION SELECTOR-157)",
                                "917901: VS158 (VARIATION SELECTOR-158)",
                                "917902: VS159 (VARIATION SELECTOR-159)",
                                "917903: VS160 (VARIATION SELECTOR-160)",
                                "917904: VS161 (VARIATION SELECTOR-161)",
                                "917905: VS162 (VARIATION SELECTOR-162)",
                                "917906: VS163 (VARIATION SELECTOR-163)",
                                "917907: VS164 (VARIATION SELECTOR-164)",
                                "917908: VS165 (VARIATION SELECTOR-165)",
                                "917909: VS166 (VARIATION SELECTOR-166)",
                                "917910: VS167 (VARIATION SELECTOR-167)",
                                "917911: VS168 (VARIATION SELECTOR-168)",
                                "917912: VS169 (VARIATION SELECTOR-169)",
                                "917913: VS170 (VARIATION SELECTOR-170)",
                                "917914: VS171 (VARIATION SELECTOR-171)",
                                "917915: VS172 (VARIATION SELECTOR-172)",
                                "917916: VS173 (VARIATION SELECTOR-173)",
                                "917917: VS174 (VARIATION SELECTOR-174)",
                                "917918: VS175 (VARIATION SELECTOR-175)",
                                "917919: VS176 (VARIATION SELECTOR-176)",
                                "917920: VS177 (VARIATION SELECTOR-177)",
                                "917921: VS178 (VARIATION SELECTOR-178)",
                                "917922: VS179 (VARIATION SELECTOR-179)",
                                "917923: VS180 (VARIATION SELECTOR-180)",
                                "917924: VS181 (VARIATION SELECTOR-181)",
                                "917925: VS182 (VARIATION SELECTOR-182)",
                                "917926: VS183 (VARIATION SELECTOR-183)",
                                "917927: VS184 (VARIATION SELECTOR-184)",
                                "917928: VS185 (VARIATION SELECTOR-185)",
                                "917929: VS186 (VARIATION SELECTOR-186)",
                                "917930: VS187 (VARIATION SELECTOR-187)",
                                "917931: VS188 (VARIATION SELECTOR-188)",
                                "917932: VS189 (VARIATION SELECTOR-189)",
                                "917933: VS190 (VARIATION SELECTOR-190)",
                                "917934: VS191 (VARIATION SELECTOR-191)",
                                "917935: VS192 (VARIATION SELECTOR-192)",
                                "917936: VS193 (VARIATION SELECTOR-193)",
                                "917937: VS194 (VARIATION SELECTOR-194)",
                                "917938: VS195 (VARIATION SELECTOR-195)",
                                "917939: VS196 (VARIATION SELECTOR-196)",
                                "917940: VS197 (VARIATION SELECTOR-197)",
                                "917941: VS198 (VARIATION SELECTOR-198)",
                                "917942: VS199 (VARIATION SELECTOR-199)",
                                "917943: VS200 (VARIATION SELECTOR-200)",
                                "917944: VS201 (VARIATION SELECTOR-201)",
                                "917945: VS202 (VARIATION SELECTOR-202)",
                                "917946: VS203 (VARIATION SELECTOR-203)",
                                "917947: VS204 (VARIATION SELECTOR-204)",
                                "917948: VS205 (VARIATION SELECTOR-205)",
                                "917949: VS206 (VARIATION SELECTOR-206)",
                                "917950: VS207 (VARIATION SELECTOR-207)",
                                "917951: VS208 (VARIATION SELECTOR-208)",
                                "917952: VS209 (VARIATION SELECTOR-209)",
                                "917953: VS210 (VARIATION SELECTOR-210)",
                                "917954: VS211 (VARIATION SELECTOR-211)",
                                "917955: VS212 (VARIATION SELECTOR-212)",
                                "917956: VS213 (VARIATION SELECTOR-213)",
                                "917957: VS214 (VARIATION SELECTOR-214)",
                                "917958: VS215 (VARIATION SELECTOR-215)",
                                "917959: VS216 (VARIATION SELECTOR-216)",
                                "917960: VS217 (VARIATION SELECTOR-217)",
                                "917961: VS218 (VARIATION SELECTOR-218)",
                                "917962: VS219 (VARIATION SELECTOR-219)",
                                "917963: VS220 (VARIATION SELECTOR-220)",
                                "917964: VS221 (VARIATION SELECTOR-221)",
                                "917965: VS222 (VARIATION SELECTOR-222)",
                                "917966: VS223 (VARIATION SELECTOR-223)",
                                "917967: VS224 (VARIATION SELECTOR-224)",
                                "917968: VS225 (VARIATION SELECTOR-225)",
                                "917969: VS226 (VARIATION SELECTOR-226)",
                                "917970: VS227 (VARIATION SELECTOR-227)",
                                "917971: VS228 (VARIATION SELECTOR-228)",
                                "917972: VS229 (VARIATION SELECTOR-229)",
                                "917973: VS230 (VARIATION SELECTOR-230)",
                                "917974: VS231 (VARIATION SELECTOR-231)",
                                "917975: VS232 (VARIATION SELECTOR-232)",
                                "917976: VS233 (VARIATION SELECTOR-233)",
                                "917977: VS234 (VARIATION SELECTOR-234)",
                                "917978: VS235 (VARIATION SELECTOR-235)",
                                "917979: VS236 (VARIATION SELECTOR-236)",
                                "917980: VS237 (VARIATION SELECTOR-237)",
                                "917981: VS238 (VARIATION SELECTOR-238)",
                                "917982: VS239 (VARIATION SELECTOR-239)",
                                "917983: VS240 (VARIATION SELECTOR-240)",
                                "917984: VS241 (VARIATION SELECTOR-241)",
                                "917985: VS242 (VARIATION SELECTOR-242)",
                                "917986: VS243 (VARIATION SELECTOR-243)",
                                "917987: VS244 (VARIATION SELECTOR-244)",
                                "917988: VS245 (VARIATION SELECTOR-245)",
                                "917989: VS246 (VARIATION SELECTOR-246)",
                                "917990: VS247 (VARIATION SELECTOR-247)",
                                "917991: VS248 (VARIATION SELECTOR-248)",
                                "917992: VS249 (VARIATION SELECTOR-249)",
                                "917993: VS250 (VARIATION SELECTOR-250)",
                                "917994: VS251 (VARIATION SELECTOR-251)",
                                "917995: VS252 (VARIATION SELECTOR-252)",
                                "917996: VS253 (VARIATION SELECTOR-253)",
                                "917997: VS254 (VARIATION SELECTOR-254)",
                                "917998: VS255 (VARIATION SELECTOR-255)",
                                "917999: VS256 (VARIATION SELECTOR-256)",
                                "",
                                ""
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                "# Word breaks\r\n\r\nThese are the categories of word breaks. The algorithm is described [here](https://www.unicode.org/Public/UNIDATA/auxiliary/WordBreakTest.html). There is also [UAX #29 Boundaries](https://www.unicode.org/reports/tr29/tr29-9.html)"
            ],
            "outputs": []
        },
        {
            "language": "typescript",
            "source": [
                "console.log( unicode.default.Word_Break )"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "application/vnd.code.notebook.stdout",
                            "value": [
                                "[",
                                "  'ALetter',       'CR',",
                                "  'Double_Quote',  'Extend',",
                                "  'ExtendNumLet',  'Format',",
                                "  'Hebrew_Letter', 'Katakana',",
                                "  'LF',            'MidLetter',",
                                "  'MidNum',        'MidNumLet',",
                                "  'Newline',       'Numeric',",
                                "  'Other',         'Regional_Indicator',",
                                "  'Single_Quote',  'WSegSpace',",
                                "  'ZWJ'",
                                "]",
                                "",
                                ""
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "typescript",
            "source": [
                "import ALetter from \"@unicode/unicode-16.0.0/Word_Break/ALetter/code-points.js\"\r\n// import DoubleQuote from \"@unicode/unicode-16.0.0/Word_Break/Double_Quote/code-points.js\"\r\n// import NumLet from \"@unicode/unicode-16.0.0/Word_Break/ExtendNumLet/code-points.js\"\r\n// import LF from \"@unicode/unicode-16.0.0/LF/ALetter/code-points.js\"\r\n// // import names from \"@unicode/unicode-16.0.0/Names\"\r\n\r\nconsole.log(showCodePoints(ALetter, 10))"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "application/vnd.code.notebook.stdout",
                            "value": [
                                "[",
                                "  '    65 - A - LATIN CAPITAL LETTER A',",
                                "  '    66 - B - LATIN CAPITAL LETTER B',",
                                "  '    67 - C - LATIN CAPITAL LETTER C',",
                                "  '    68 - D - LATIN CAPITAL LETTER D',",
                                "  '    69 - E - LATIN CAPITAL LETTER E',",
                                "  '    70 - F - LATIN CAPITAL LETTER F',",
                                "  '    71 - G - LATIN CAPITAL LETTER G',",
                                "  '    72 - H - LATIN CAPITAL LETTER H',",
                                "  '    73 - I - LATIN CAPITAL LETTER I',",
                                "  '    74 - J - LATIN CAPITAL LETTER J'",
                                "]",
                                "",
                                ""
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "typescript",
            "source": [
                "import DoubleQuote from \"@unicode/unicode-16.0.0/Word_Break/Double_Quote/code-points.js\"\r\n// import NumLet from \"@unicode/unicode-16.0.0/Word_Break/ExtendNumLet/code-points.js\"\r\n// import LF from \"@unicode/unicode-16.0.0/LF/ALetter/code-points.js\"\r\n// // import names from \"@unicode/unicode-16.0.0/Names\"\r\n\r\nconsole.log(`${DoubleQuote.length} items\\n`, showCodePoints(DoubleQuote, 10))"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "application/vnd.code.notebook.stdout",
                            "value": [
                                "1 items",
                                " [ '    34 - \" - QUOTATION MARK' ]",
                                "",
                                ""
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "typescript",
            "source": [
                "import LF from \"@unicode/unicode-16.0.0/Word_Break/LF/code-points.js\"\r\n\r\nconsole.log(`${showCodePoints.length} items\\n`, showCodePoints(LF, 10))"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "application/vnd.code.notebook.stdout",
                            "value": [
                                "2 items",
                                " [ '    10 - \\n - <control>' ]",
                                "",
                                ""
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "typescript",
            "source": [
                "import NumLet from \"@unicode/unicode-16.0.0/Word_Break/ExtendNumLet/code-points.js\"\r\n\r\nconsole.log(`${NumLet.length} items\\n`, showCodePoints(NumLet, 10))"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "application/vnd.code.notebook.stdout",
                            "value": [
                                "11 items",
                                " [",
                                "  '    95 - _ - LOW LINE',",
                                "  '  8239 -   - NARROW NO-BREAK SPACE',",
                                "  '  8255 - ‿ - UNDERTIE',",
                                "  '  8256 - ⁀ - CHARACTER TIE',",
                                "  '  8276 - ⁔ - INVERTED UNDERTIE',",
                                "  ' 65075 - ︳ - PRESENTATION FORM FOR VERTICAL LOW LINE',",
                                "  ' 65076 - ︴ - PRESENTATION FORM FOR VERTICAL WAVY LOW LINE',",
                                "  ' 65101 - ﹍ - DASHED LOW LINE',",
                                "  ' 65102 - ﹎ - CENTRELINE LOW LINE',",
                                "  ' 65103 - ﹏ - WAVY LOW LINE'",
                                "]",
                                "",
                                ""
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "typescript",
            "source": [
                "import CR from \"@unicode/unicode-16.0.0/Word_Break/CR/code-points.js\"\r\n\r\nconsole.log(`${CR.length} items\\n`, showCodePoints(CR, 10))"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "application/vnd.code.notebook.stdout",
                            "value": [
                                "1 items",
                                " [ '    13 - \\r - <control>' ]",
                                "",
                                ""
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "typescript",
            "source": [
                "import MidLetter from \"@unicode/unicode-16.0.0/Word_Break/MidLetter/code-points.js\"\r\n\r\nconsole.log(`${MidLetter.length} items\\n`, showCodePoints(MidLetter, 10))"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "application/vnd.code.notebook.stdout",
                            "value": [
                                "9 items",
                                " [",
                                "  '    58 - : - COLON',",
                                "  '   183 - · - MIDDLE DOT',",
                                "  '   903 - · - GREEK ANO TELEIA',",
                                "  '  1375 - ՟ - ARMENIAN ABBREVIATION MARK',",
                                "  '  1524 - ״ - HEBREW PUNCTUATION GERSHAYIM',",
                                "  '  8231 - ‧ - HYPHENATION POINT',",
                                "  ' 65043 - ︓ - PRESENTATION FORM FOR VERTICAL COLON',",
                                "  ' 65109 - ﹕ - SMALL COLON',",
                                "  ' 65306 - ： - FULLWIDTH COLON'",
                                "]",
                                "",
                                ""
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "typescript",
            "source": [
                "import MidNum from \"@unicode/unicode-16.0.0/Word_Break/MidNum/code-points.js\"\r\n\r\nconsole.log(`${MidNum.length} items\\n`, showCodePoints(MidNum, 10))"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "application/vnd.code.notebook.stdout",
                            "value": [
                                "13 items",
                                " [",
                                "  '    44 - , - COMMA',",
                                "  '    59 - ; - SEMICOLON',",
                                "  '   894 - ; - GREEK QUESTION MARK',",
                                "  '  1417 - ։ - ARMENIAN FULL STOP',",
                                "  '  1548 - ، - ARABIC COMMA',",
                                "  '  1549 - ؍ - ARABIC DATE SEPARATOR',",
                                "  '  1644 - ٬ - ARABIC THOUSANDS SEPARATOR',",
                                "  '  2040 - ߸ - NKO COMMA',",
                                "  '  8260 - ⁄ - FRACTION SLASH',",
                                "  ' 65104 - ﹐ - SMALL COMMA'",
                                "]",
                                "",
                                ""
                            ]
                        }
                    ]
                }
            ]
        }
    ]
}